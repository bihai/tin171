2012-03-16
The group is formed and we decide to have a meeting on Monday.

2012-03-19
Our first meeting is a success. We decide on three projects: NLP1, L1
and S1. There are two ideas for what game to use with S1, but after
some deliberation (and a coin flip) we choose Chinese Checkers.
We have a meeting with a supervisor tomorrow.

2012-03-20
We meet with a supervisor and ask him about our project ideas. There
do not appear to be any problems with them. We receive some useful
information and decide on how to divide the work for the rest of the
week. Emil will research movie recommendation systems, Rodolphe takes
care the dialogue system (looking into Grammatical Framework and other
options). Göran and Salvo search for literature on Chinese Checkers.

2012-03-21
Göran writes a draft of the pre-proposal for the Chinese Checkers
project.

2012-03-22
Created the add_entry script

2012-03-22
We all meet to work on the pre-proposal. Salvo and Rodolphe have been
trying to get cheech to compile and also tried to find alternatives to
cheech. Salvo tells us about an old Master's thesis on the subject of
Chinese Checkers and we learn a few things from that. The pre-proposal
is almost finished.

Salvo and Rodolphe tried to compile some chinese checkers clients such as
cheech. Which unfortunately uses library calls that do not exist anymore and
would require some time to be fixed (and additional time to learn the GTK
front end for C++).

2012-03-23
Our last meeting before the pre-proposal deadline. Emil announces that
he's started working on a Chinese Checkers server written in Erlang.
The state of freely available Chinese Checkers programs is pretty
deplorable, so having our own game server may turn out to be a good
idea. Emil has filled in the few missing parts of the pre-proposal.
Only some small problems remain, which we fix before submitting.

2012-03-25
Rodolphe begins to write the survey about the dialog system (NLP) and
is also looking for additional references.

2012-03-27
We have a meeting with our supervisor, Birgit. In section 1.2 we write
that "it is not clear how well [the algorithms] play against humans."
We talk about having bots play against ourselves, against themselves
and against existing bots.

We should start by playing a two-player game and then extend it to
three players, etc. It's a good idea to get it working for two
players, in order to have something solid on which to improve. Then we
can move on to the more difficult things.

We show Birgit the diary. It gets a positive reaction. Rodolphe notes
that the git changelog is complementary to the diary.

Emil asks for advice on how to divide the work. We can work on
different tasks; not everyone has to work on the surveys, and not
everyone has to work on the proposal, etc. But we must of course all
know what it is we are putting our names on. We must know the
material.

We need to read more in the literature. Göran asks about literature on
games that might be similar. It seems difficult to find similar games.
But the strategies used to play other games will likely work out here
as well: alpha-beta, minmax, etc. For some games of chance people have
used Markov chains and randomized Markov models. The most common is a
tree search combined with heuristics. We'll need some sort of board
state evaluation function. The thesis we're going to reference writes
about these. We could try to form "strategies" and try to device a
plan to take us to some nice board state. We could try to emulate what
we think humans do.

Göran asks how the pre-proposal needs to be improved in order to make
it a proposal. First of all we need to find more literature and write
about it (or convince Birgit that there is no more literature to be
found). The sections in chapter 2 need to be longer and we need more
details about the central idea of our solution. The pseudo code must
be more specific to our own problem. We should be more precise about
first playing a two-player game and then playing against more players
and against other programs. One or two additional pages are needed.

The surveys should focus on some particular problem, not on the whole
field. In our case that would be the movie recommendation system and
the helpdesk dialog system. We don't have to write pseudo code or
write about how we would solve the problem. We might describe the
methods that are normally used to solve it.

After our meeting with Birgit we have a short informal meeting. Emil
shows us a network protocol he's been working on and we give him some
feedback on how to improve it. It agreed to represent the board using
an unidimensional array. Salvo has been working on a GUI. Göran will
start on the proposal and Rodolphe will be working on the NLP survey.
Our next meeting is tomorrow.

2012-03-28
We have a meeting again. Emil works on the server and Salvo works on
the GUI while Rodolphe and Göran search the literature.

2012-03-29
Salvo has worked on a QT widget that shows a board using vector graphics so that
it can be resized. The image itself comes from wikipedia and is modified to show
the marbles.

2012-03-30
We meet to finish up the proposal. We feel satisfied with what we have produced
and submit the proposal. Salvo continues on the client. Emil will finish up the
server during the easter(this weekend).

2012-04-17
We're back from easter break and we have a meeting with our supervisor
during which we receive feedback on the project proposal. The proposal
was generally very good, but we could have written more details on
heuristics.

A hint for section 2.3 (measuring performance) is bounds: find bounds
for the number of steps needed to reach the goal state. This could be
what it would take to compute the number of steps needed when moving
each peg only one step at a time. Another idea is "I can only use 100
steps". Try to think of some simple bounds and then compare the bots
with the bounds. The course book uses the sliding puzzle as an
example. One bound there is the number of tiles in the wrong place.
This gives a (bad) lower bound on the number of steps required. This
is kind of what you do with approximation algorithms.

Next we discussed the surveys. One tip is to look for the papers which
are most widely cited in the literature. Notable programs on the web
can also be cited.

We can restrict the surveys to a specific domain, but writing about
the wider field is good and shows that we've done research. Papers can
be mentioned even if it's in just one or two sentences. The surveys
are meant to make us study the wider field of AI, not just the part
required for our project.

The draft deadlines are meant to make us start working on the project
report rather early. The draft should have more details on heuristics
in particular and there should be more details in general.

The surveys will be graded by two different people, so we should
submit them in separate documents.

2012-04-18
We meet in the library and make a plan for the rest of the week. Emil
and Rodolphe will be working on surveys and Salvo will be working on
the GUI. Göran will edit the surveys and also start writing a bot.

Emil shows us the server and we try to use it. We discover some bugs
but at the end of the day the server is working. The wire protocol for
the server currently uses Erlang's data representation, and it looks
like this might be difficult to use together with Python. A switch to
JSON seems likely.

2012-04-19
Göran has written (in Python) a parser and formatter for the Erlang
datums used by the server-client protocol. Along with this there is
also a basic bot that can join or host a game, but it does not yet
make any moves.

Salvo used the parser written by Göran in the GUI client, which can now be used
to play a game and is practically completed.
This led to the discovery of a bug in the server, when it has to decide which
moves are correct.
The QT widget that shows the board had to be updated to be able to use another
color for marbles, used just to highlight.

2012-04-20
We meet to finalize the surveys. We also play Chinese Checkers with
Salvo's GUI client for the first time.

2012-04-23
Salvo wrote function that returns the total distance of all the marbles from the
target. It can also be used to check when a player wins, because the distance
will be 0 in that case.
Goran wrote some functions to list all the available moves that a player can
make.

2012-04-24
We had the supervision time and a meeting.
In the meeting we modified the bot so that it can use the distance function
implemented yesterday.
The bot was also modified to use function pointers, to be able to select
different algorithms in the future.
The graphical client can now show when a game is lost or won, and can spectate
to games that are already started.
Rodolphe wrote a different distance function that considers the distance in
moves without jumps to the hole in the corner of the destination. Salvo has
extended the bot to be able to use the new distance function and then spectated
some game between two bots using the different functions. The result is that the
new distance function performs better in the beginning of the game, but fails to
achieve the goal and makes random moves in the end.

2012-04-25
Salvo started to write some code that can run some bots on a match, and for now
only collects all the moves, and the winner.

2012-04-26
Göran writes a bot function that uses the iterative-deepening depth
first search algorithm. It seems to be better than the trivial bot.

2012-04-27
Rodolphe writes a command-line client in C. It is possible to host / join /
spectate a game. The plan is to use this to implement bots in C, because
python bots seem to be a little slow.

2012-05-02 
We have a meeting with Birgit during which we receive feedback on the
first sections of the report. Section headings should be changed. The
original headings were more intended to be explanatory for us and now
they should be changed to look like a real report. We receive some
style tips, viz.: "it's" and "we've" is bad form; "effectiveness" and
"effect" in the same sentence is clumsy; beginning a sentence with a
term like /cheech/ looks bad; and it should be the "opposite" corner.

A report should answer the questions of the reader, and we are not
doing that in some places (e.g. where it says that "... strategies are
less effective ...", the reader will want to know why). We mention
that Ulfhake writes about heuristics, but the reader will want to know
what they are. We might write about the type of heuristics she used,
if we don't want to give a lot of details.

In section 2.2 we should be more detailed about our heuristics. We
could write pseudo code and reference it here.

We also show Birgit the current state of the project and talk a bit
about heuristics and search algorithms. It's good that we're doing
many different things, but we should not forget to write it all down
in the report as well. Write also about things that we have thought
about; perhaps in a future work section.

2012-05-03
Göran writes a section in the report on the modules we currently have
in our project.

2012-05-04
We meet to work on the report. Emil writes some pseudo code and Salvo
writes about heuristics. Rodolphe is working on our board evaluation
function.

Later the same day Göran implements a genetic algorithm in the hopes
that it can find a better board evaluation function. The algorithm is
running and is showing promising results.

2012-05-05
Göran writes a program for converting our board evaluation functions
(distance arrays) into LaTeX graphics and for rotating the arrays so
that, given an array for player 1, we get arrays for all players. He
also makes two new bot personalities based on functions found by the
genetic algorithm. One of the bots gets stuck in a local minimum just
before winning. Our idea to split the game into different phases might
be the cure for this problem.

2012-05-06
Göran writes a subsection on the results from the genetic algorithm
experiment.
Salvo works on the parallel bot and obtains a working version that does pruning
and can consider the moves of all the players. At the moment limited depth but
seems to perform better than the iddfs for two players.

2012-05-06
Rodolphe investigates possibilities with the Max-Prob algorithm. But it seems
that the paper have a few typos and is quite unclear for the description of
the algorithm, which might make it hard to implement. He also checks for other
literature on the Max-Prob algorithm, but since it is described in a very
recent paper (2011), there is nothing else...

2012-05-08
Salvo fixes the parallel bot so that it can play against any number of players
without needing manual changes everytime. Also adds "personalities" to play with
the different evaluation functions.

2012-05-08
We meet with Birgit and discuss the latest draft. We also talk about
the results from the genetic algorithm.

It would be nice if the report had some pictures, e.g. the
introduction could show a picture of the board.

It was not as clear as it could be that our search algorithms are
time-limited. And on that note, it appears that the minimax algorithm
isn't time-limited.

The section on heuristics might be split into dicussions on two-player
heuristics and multiplayer heuristics. Things we did not implement
(start and end game detection etc) should be moved to "Future work".
There does not need to be a subsection for things not yet implemented
and so on.

We should probably write about alpha-beta pruning instead of just
minimax. Alpha-beta is so trivial that it is gonna raise questions if
we do not use it.

We have been doing a lot of different things and they should all be
visible in the report.

The appendix should contain a summary of the diary or perhaps a link
to it.

The minimax pseudo code is different from the book. Is there a reason
for this?

The "Results" section should have tables comparing the bots against
each other and against ourselves. There should be more text.

Perhaps the pseudo code and the genetic algorithm description belongs
in section 3.

There is a demo and an oral exam coming up. In the demo we should be
prepared to show the game being played by bots or people. We should be
able to talk about the things we've written in the report. We should
bring color printouts of the report. It is a small gathering so we
will not need a projector or slides. The oral exam is a lot like the
demo, but the report will have been finalized and everyone will have
had an opportunity to read it. There will be no demos in the oral exam
though.

Salvo modifies the arena to gather stats about the games between the various
personalities.

2012-05-10
Salvo resolves a race condition in the parallel bot that caused it to hang
sometimes.
Rodolphe begins to write a paragraph on the Max-Prob algorithm in the report.
We will not implement this algorithm since we cannot undersand the details.

2012-05-10
Rodolphe plays against all the bots, and get the following results:
Cheaters:
  Against bot 2  : Won very easily, but the bot was cheating with pegs in his
                   nests.
  Against bot 3  : Won very easily, the bot was cheating... (also sent three
                   pegs as scouts)
  Against bot 7  : I destroyed it! But it was really cheating...
Cowards:
  Against bot 4  : Won easyly, the bot played well but left 2 guys behind...
  Against bot 5  : Won easyly, the bot left guys behind.
  Against bot 10 : Lost, but it shouldn't have because it left a guy behind.
                   I did not play too well.
                   Won the second time with one move difference.
Easy:
  Against bot 0  : Won really easily.
  Against bot 6  : Won quite easily.
Unexpected:
  Against bot 1  : Won easily, but it was more difficult than I expected.
Bad decisions:
  Against bot 8  : Played quite well, but took very bad decisions some times.
                   Also blocked me sometimes.
  Against bot 9  : I destroyed it! It seems like it really wanted to use one
                   path, and since I was there it didn't go forward much.
Best bot:
  Against bot 11 : Lost, but with only one move difference...
  Won the second time.

2012-05-11
Salvo modifies the arena giving shorter limits for games where bots get stuck
and nobody can win, also a manual signal can be send to force a game to end and
the arena to move to the next match. Also wrote a module to read the results of
the various matches and get some meaningful data from it.
We have a meeting where we divide the remaining work. Salvo will be
working on benchmarks. Rodolphe writes about some more papers he
found. Emil investigates why alphabeta appears to be worse than our
less clever bots. Göran will edit the report.

2012-05-12
Göran splits the report TeX source into multiple files to make it
easier to edit. There's now a preliminary editing which will be
finished Sunday.

2012-05-13
We have a Sunday meeting to finish up the report.

2012-05-17
After the demo session it was pointed out that our statistics are more not very
indicative, so we met again to decide how to improve them.
We automatically generated a list of two players games to do all the
combinations between the bots, Salvo fixed the arena to have timeouts in case
bots get stuck.
Göran started the new set of test games on his server, after estimating 28 hours
to completion.